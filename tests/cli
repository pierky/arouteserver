#!/bin/bash

if [ ! -e "setup.py" ]; then
	echo "The script must be executed from within the repository's root directory."
	exit 1
fi

export PYTHONPATH="`pwd`"

mkdir -p var/cache &>/dev/null

RES_FILE=`mktemp`
echo 0 > $RES_FILE

function reset() {
	AROUTESERVER="./scripts/arouteserver"
	CFG_FILE="tests/var/arouteserver.yml"
	GENERAL="config.d/general.yml"
	CLIENTS="config.d/clients.yml"
	BOGONS="config.d/bogons.yml"
	TITLE=""
	SUB_TEST=""
}

function build_cmd() {
	COMMAND="$1" ; shift
	$AROUTESERVER $COMMAND --cfg $CFG_FILE --logging-level ERROR --general $GENERAL --clients $CLIENTS --bogons $BOGONS $@ 2>&1
}

function run_cmd() {
	COMMAND="$1" ; shift
	$AROUTESERVER $COMMAND --cfg $CFG_FILE $@ 2>&1
}

function error() {
	echo "Failure during '$TITLE' at line $SUB_TEST: $1"
	echo 1 > $RES_FILE
}

function must_contain() {
	grep "$1" &>/dev/null || error "\"$1\" not found."
}

function must_not_contain() {
	grep "$1" &>/dev/null

	if [ $? -eq 0 ]; then
		error "\"$1\" found."
	fi
}

# ---------------------------------------------
# YAML include files
reset
TITLE="Configuration !include"
GENERAL_RS1="tests/var/general-rs1.yml"
cat << EOF > $GENERAL_RS1
cfg:
  router_id: "192.0.2.1"
  !include general-shared.yml
EOF
GENERAL_RS2="tests/var/general-rs2.yml"
cat << EOF > $GENERAL_RS2
cfg:
  router_id: "192.0.2.2"
  !include general-shared.yml
EOF
GENERAL_SHARED="tests/var/general-shared.yml"
cat << EOF > $GENERAL_SHARED
  rs_as: 999
  passive: True
  gtsm: True
EOF
SUB_TEST="$LINENO"
GENERAL="$GENERAL_RS1"
build_cmd "bird" --ip-ver 4 | must_contain "router id 192.0.2.1"
SUB_TEST="$LINENO"
GENERAL="$GENERAL_RS2"
build_cmd "bird" --ip-ver 4 | must_contain "router id 192.0.2.2"

# ---------------------------------------------
# RPKI ROAs as route objects invalid source
reset
TITLE="RPKI ROAs as route objects invalid source"
SUB_TEST="$LINENO"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  filtering:
    irrdb:
      use_rpki_roas_as_route_objects:
        enabled: true
        source: "rtrlib"
EOF
build_cmd "openbgpd" | must_contain "only the 'ripe-rpki-validator-cache' value"

# ---------------------------------------------
# RFC1997 'pass' policy and bgp comms collision
reset
TITLE="RFC1997 'pass' policy and BGP comms collision"
SUB_TEST="$LINENO"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  communities:
    prepend_once_to_any:
      ext: "ro:65535:65281"
EOF
build_cmd "openbgpd" | must_contain "A collision has been detected with the following community: prepend_once_to_any"

## ---------------------------------------------
## custom BGP communities
#reset
#TITLE="Custom BGP communities"
#SUB_TEST="$LINENO"
#GENERAL="tests/var/general.yml"
#cat << EOF > $GENERAL
#cfg:
#  rs_as: 999
#  router_id: "192.0.2.2"
#  custom_communities:
#    city_haarlem:
#      std: "65501:1"
#    city_amsterdam:
#      std: "65501:2"
#EOF
#CLIENTS="`mktemp`"
#run_cmd "clients-from-euroix" --url https://my.ams-ix.net/api/v1/members.json 2 --vlan-id 502 --guess-custom-bgp-communities city -o $CLIENTS
#cat $CLIENTS | must_contain "city_amsterdam"
#cat $CLIENTS | must_contain "city_haarlem"
#build_cmd "bird" --ip-ver 4 | must_contain "bgp_community.add((65501, 2));"
#rm $CLIENTS

# ---------------------------------------------
reset
TITLE="OpenBGPD default config"
SUB_TEST="$LINENO"
build_cmd "openbgpd" | must_contain "ERROR Compatibility issue ID 'path_hiding'"

# ---------------------------------------------
reset
TITLE="OpenBGPD large comms only"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  communities:
    do_not_announce_to_peer:
      lrg: "rs_as:0:peer_as"
EOF

EXP_ERR="ERROR Compatibility issue ID 'large_communities'. The community 'do_not_announce_to_peer'"

SUB_TEST="$LINENO"
build_cmd "openbgpd" | must_not_contain "$EXP_ERR"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.0 | must_contain "$EXP_ERR"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.1 | must_not_contain "ERROR Compatibility issue ID 'large_communities'"

# ---------------------------------------------
reset
TITLE="OpenBGPD blackhole filtering rewrite next-hop IPv6"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  blackhole_filtering:
    policy_ipv6: 'rewrite-next-hop'
    rewrite_next_hop_ipv6: '2001:db8:1:1::66'
EOF

EXP_ERR="Compatibility issue ID 'blackhole_filtering_rewrite_ipv6_nh'. On OpenBSD < 6.1"

SUB_TEST="$LINENO"
build_cmd "openbgpd" | must_not_contain "$EXP_ERR"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.0 | must_contain "$EXP_ERR"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.1 | must_not_contain "Compatibility issue ID 'blackhole_filtering_rewrite_ipv6_nh'"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --ignore-issues "blackhole_filtering_rewrite_ipv6_nh" | must_not_contain "'do_not_announce_to_peer'"

SUB_TEST="$LINENO"
build_cmd "junos" | must_not_contain "invalid choice"

# ---------------------------------------------
reset
TITLE="OpenBGPD large comms"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  communities:
    do_not_announce_to_peer:
      std: "0:peer_as"
      lrg: "rs_as:0:peer_as"
EOF

EXP_ERR="'do_not_announce_to_peer' has been configured to be implemented using also the large community '999:0:peer_as';"

SUB_TEST="$LINENO"
build_cmd "openbgpd" | must_not_contain "$EXP_ERR"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.0 | must_contain "$EXP_ERR"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.1 | must_not_contain "'do_not_announce_to_peer'"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --target-version 6.0 --ignore-issues "large_communities" | must_not_contain "'do_not_announce_to_peer'"

SUB_TEST="$LINENO"
build_cmd "openbgpd" --ignore-issues "large_communities" | must_not_contain "'do_not_announce_to_peer'"

# ---------------------------------------------
reset
TITLE="OpenBGPD tag_and_reject reject policy"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  filtering:
    reject_policy:
      policy: tag_and_reject
EOF

EXP_ERR="ERROR For OpenBGP, 'reject_policy' can't be set to 'tag_and_reject'."

SUB_TEST="$LINENO"
build_cmd "openbgpd" | must_not_contain "$EXP_ERR"

# ---------------------------------------------
reset
TITLE="OpenBGPD max_prefix_count_rejected_routes"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  filtering:
    max_prefix:
      count_rejected_routes: False
EOF

EXP_ERR="the only available behaviour is to have the rejected routes counted towards the limit"

SUB_TEST="$LINENO"
build_cmd "openbgpd" | must_contain "$EXP_ERR"

# ---------------------------------------------
reset
TITLE="BIRD 2.0.7 max_prefix_count_rejected_routes"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
EOF

EXP_ERR="BIRD 2.0.7 is affected by an issue that prevents that statement from working"

SUB_TEST="$LINENO"
build_cmd "bird" --target-version 2.0.7 | must_contain "$EXP_ERR"
SUB_TEST="$LINENO"
build_cmd "bird" --target-version 2.0.7+b962967e | must_not_contain "$EXP_ERR"

# ---------------------------------------------
reset
TITLE="BIRD multihop with path_hiding"
GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
EOF
CLIENTS="tests/var/clients.yml"
cat << EOF > $CLIENTS
clients:
  - asn: 1
    ip:
    - "192.0.2.11"
    - "2001:db8:1:1::11"
    cfg:
      multihop: 5
EOF

EXP_ERR="multihop is not supported on BIRD configurations when path_hiding mitigation is enabled"

SUB_TEST="$LINENO"
build_cmd "bird" --ip-ver 4 | must_contain "$EXP_ERR"
SUB_TEST="$LINENO"
build_cmd "bird" --target-version 2.0.7 | must_contain "$EXP_ERR"

GENERAL="tests/var/general.yml"
cat << EOF > $GENERAL
cfg:
  rs_as: 999
  router_id: "192.0.2.2"
  path_hiding: False
EOF

SUB_TEST="$LINENO"
build_cmd "bird" --ip-ver 4 | must_not_contain "$EXP_ERR"
SUB_TEST="$LINENO"
build_cmd "bird" --target-version 2.0.7 | must_not_contain "$EXP_ERR"

# ---------------------------------------------
# clients-from-euroix
reset
TITLE="clients-from-euroix"

# 0.4 schema version:
SUB_TEST="$LINENO"
run_cmd "clients-from-euroix" --url https://my.ams-ix.net/api/v1/members.json 2 | must_contain "description: Akamai"
# 0.5 schema version:
SUB_TEST="$LINENO"
run_cmd "clients-from-euroix" --url https://portal.lonap.net/apiv1/member-list/list 1 | must_contain "AS-APPLE"
# 0.6 schema version:
SUB_TEST="$LINENO"
run_cmd "clients-from-euroix" --url https://ixp.getafix.ph/api/v4/member-export/ixf/0.6 2 | must_contain "description: GetaFIX AS112 Blackhole"
# 0.7 schema version:
SUB_TEST="$LINENO"
run_cmd "clients-from-euroix" --url https://ixpmanager.swissix.ch/api/v4/member-export/ixf/0.7 1 | must_contain "description: Packet Clearing House"

# ---------------------------------------------
ERROR=`cat $RES_FILE`
if [ $ERROR -eq 1 ]; then
	echo "Done! ERRORS FOUND"
else
	echo "Done!"
fi
rm $RES_FILE

exit $ERROR
